% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/date_plausibility.R
\name{process_dp}
\alias{process_dp}
\title{Date Plausibility -- Processing}
\usage{
process_dp(dp_results, rslt_source = "remote", csv_rslt_path = NULL)
}
\arguments{
\item{dp_results}{\emph{tabular input} || \strong{required}

The tabular output of \code{check_dp}. This table should include results for all
institutions that should be included in the computation of overall / "network level"
statistics.}

\item{rslt_source}{\emph{string} || defaults to \code{remote}

A string that identifies the location of the \code{dp_results} table.
Acceptable values are
\itemize{
\item \code{local} - table is stored as a dataframe in the local R environment
\item \code{csv} - table is stored as a CSV file
\item \code{remote} - table is stored on a remote database
}}

\item{csv_rslt_path}{\emph{string} || defaults to \code{NULL}

If \code{rslt_source} has been set to \code{csv}, this parameter should indicate the path to
the result file(s). Otherwise, this parameter can be left as \code{NULL}}
}
\value{
This function will return the \code{dp_results} table with additional
\code{check_name_app} column to indicate application level
}
\description{
Intakes the output of \code{check_dp} in order to apply additional processing. This
includes creating a new \code{check_name_app} column to specify that the check
was computed at the row level.
}
\examples{
# This function should be run after check_dp has been executed for all
# network institutions and results have been combined into a common table

## When results are kept locally:
\dontrun{
my_dp_process <- process_dp(dp_results = my_dp_rslts,
                            rslt_source = 'local')
}

## When results are kept in CSV files:
\dontrun{
my_dp_process <- process_dp(dp_results = 'my_dp_rslts',
                            rslt_source = 'csv',
                            csv_rslt_path = 'path/to/my/results')
}

## When results are kept on a remote database:
\dontrun{
my_dp_process <- process_dp(dp_results = 'my_dp_rslts',
                            rslt_source = 'remote')
}

}
