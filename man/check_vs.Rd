% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/valueset_conformance.R
\name{check_vs}
\alias{check_vs}
\title{Valueset Conformance}
\usage{
check_vs(
  vs_tbl,
  omop_or_pcornet = "omop",
  concept_tbl = NULL,
  null_values = c(44814650L, 0L, 44814653L, 44814649L),
  check_string = "vs"
)
}
\arguments{
\item{vs_tbl}{\emph{tabular input} || \strong{required}

The primary input table that contains descriptive information about the checks
to be executed by the function. It should include definitions for the fields and
associated valuesets of interest.
see \code{?vs_input_omop} or \code{?vs_input_pcornet} for examples of the input structure}

\item{omop_or_pcornet}{omop_or_pcornet \emph{string} || defaults to \code{omop}

A string, either \code{omop} or \code{pcornet}, indicating the CDM format of the data}

\item{concept_tbl}{\emph{tabular input} || defaults to \code{NULL}

An optional parameter used to define a vocabulary table with concept definitions
(for example, the OHDSI concept table). If left NULL, the concepts as they exist
in the fact table will be returned to the user.}

\item{null_values}{\emph{string / vector} || defaults to 44814650, 0, 44814653, & 44814649

A string or vector listing the concept(s) that indicate a NULL value, which will be
excluding when assessing for the presence of values not present in the valueset.}

\item{check_string}{\emph{string} || defaults to \code{vs}

An abbreviated identifier that will be used to label all output from this module}
}
\value{
This function will return a dataframe with summary information about each value
that appears in the data but does not comply with the valueset definition. If no violations are
identified for a particular check, a placeholder row will dummy information will be inserted
instead.
}
\description{
This function will intake a limited valueset that is expected to make up the
entire contents of a field (minus the specified \code{null_values}) and identify
if any non-permitted values exist in the field (and how often).
}
\examples{
# First create input file with desired checks to be executed
# You can access examples for both OMOP & PCORnet here:
ndq::vs_input_omop
ndq::vs_input_pcornet

# Use this as your input to the VS function
\dontrun{
my_vs_rslt <- check_vs(vs_tbl = ndq::vs_input_omop,
                       omop_or_pcornet = 'omop',
                       concept_tbl = vocabulary_tbl("concept"), ## points to OHDSI concept table
                       null_values = c(44814650L,0L,
                                       44814653L,44814649L), # ignored illegal values
                       check_string = 'vs')
}

}
