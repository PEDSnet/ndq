% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/valueset_conformance.R
\name{check_vs}
\alias{check_vs}
\title{Valueset Conformance}
\usage{
check_vs(
  vs_tbl,
  omop_or_pcornet = "omop",
  check_string = "vs",
  concept_tbl = vocabulary_tbl("concept"),
  null_values = c(44814650L, 0L, 44814653L, 44814649L)
)
}
\arguments{
\item{vs_tbl}{a table with the table, field, and valueset information for each
check}

\item{omop_or_pcornet}{string indicating the CDM format of the data; defaults to \code{omop}}

\item{check_string}{an abbreviated identifier to identify all output from this module
defaults to \code{vs}}

\item{concept_tbl}{a vocabulary table, like the OMOP concept table, with at least the concept column of interest (concept_id or concept_code),
the concept name, and the vocabulary id}

\item{null_values}{a vector of NULL values (or other values that are not part of the valueset but are broadly accepted)
that should be excluded when identifying non-valueset concepts}
}
\value{
a dataframe with summary information about each value that does not
appear in the valueset, or a row with dummy information if no violations are identified
}
\description{
This function will intake a limited valueset that is expected to make up the
entire contents of a field (minus the specified \code{null_values}) and identify
if any non-permitted values exist in the field (and how often).
}
\examples{
# First create input file with desired checks to be executed
# You can access examples for both OMOP & PCORnet here:
ndq::vs_input_omop
ndq::vs_input_pcornet

# Use this as your input to the VS function
\dontrun{
my_vs_rslt <- check_vs(vs_tbl = ndq::vs_input_omop,
                       omop_or_pcornet = 'omop',
                       concept_tbl = vocabulary_tbl("concept"), ## points to OHDSI concept table
                       null_values = c(44814650L,0L,
                                       44814653L,44814649L), # ignored illegal values
                       check_string = 'vs')
}

}
