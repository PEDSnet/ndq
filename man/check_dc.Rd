% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_cycle_changes.R
\name{check_dc}
\alias{check_dc}
\title{Data Cycle Changes}
\usage{
check_dc(
  dc_tbl,
  omop_or_pcornet = "omop",
  prev_db_string = "v1",
  current_db_string = "v2",
  prev_ct_src = "cdm",
  prev_db = config("db_src"),
  prev_rslt_tbl = "dc_output",
  prev_rslt_schema = config("results_schema"),
  check_string = "dc"
)
}
\arguments{
\item{dc_tbl}{table with details of the CDM elements that should be tested in
both the current and previous data model versions. see \code{?dc_input_omop} or
\code{?dc_input_pcornet} for details}

\item{omop_or_pcornet}{string indicating the CDM format of the data; defaults to \code{omop}}

\item{prev_db_string}{string label indicating the previous CDM version; if
\code{prev_ct_src == 'result'}, ensure this matches the appropriate database
label in the last set of results}

\item{current_db_string}{string label indicating the current CDM version}

\item{prev_ct_src}{a string indicating where the counts from the previous data model
should be extracted: either \code{cdm} (to pull from the previous CDM instance)
or \code{result} (to pull from a previous instance of \code{check_dc} output)}

\item{prev_db}{the database connection to be used to access the previous CDM or result table(s);
defaults to \code{config('db_src')}}

\item{prev_rslt_tbl}{if \code{prev_ct_src = 'result'}, the name of the table where previous results
are stored}

\item{prev_rslt_schema}{if \code{prev_ct_src = 'result'}, the name of the schema where previous results
are stored. defaults to \code{config('results_schema')}}

\item{check_string}{an abbreviated identifier to identify all output from this module
defaults to \code{dc}}
}
\value{
a list with two dataframes:
- \code{dc_cts}: dataframe containing the row and (where applicable) person counts for each table
- \code{dc_meta}: the metadata associated with each input table that appears in \code{dc_cts}
}
\description{
This function will compute row & patient counts in the specified tables for both
the current data model version and a previous data model version in order to
assess changes across data extractions. If you have previously executed this function,
you have the option to point to a previous result set instead of recomputing the
counts from the CDM.
}
\examples{
# First create input file with desired checks to be executed
# You can access examples for both OMOP & PCORnet here:
ndq::dc_input_omop
ndq::dc_input_pcornet

# Use this as your input to the DC function

## If you would like to retrieve counts from a previous CDM instance,
## configure the function like so:
\dontrun{
my_dc_rslt <- check_dc(dc_tbl = ndq::dc_input_omop,
                       omop_or_pcornet = 'omop',
                       prev_db_string = 'my_previous_data',
                       current_db_string = 'my_current_data',
                       prev_ct_src = 'cdm', ## looking in previous CDM instance
                       prev_db = my_prev_db_connection,
                       check_string = 'dc')
}

## If you would like to reference previously executed counts from a prior
## run of check_dc, configure the function like so:
\dontrun{
my_dc_rslt <- check_dc(dc_tbl = ndq::dc_input_omop,
                       omop_or_pcornet = 'omop',
                       prev_db_string = 'my_previous_data',
                       current_db_string = 'my_current_data',
                       prev_ct_src = 'result', ## looking in previous results
                       prev_db = my_prev_db_connection,
                       prev_rslt_tbl = 'my_dc_rslt',
                       prev_rslt_schema = 'my_previous_schema',
                       check_string = 'dc')
}

}
