% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_cycle_changes.R
\name{check_dc}
\alias{check_dc}
\title{Data Cycle Changes}
\usage{
check_dc(
  dc_tbl,
  omop_or_pcornet = "omop",
  prev_db_string = "v1",
  current_db_string = "v2",
  prev_ct_src = "cdm",
  prev_db = config("db_src"),
  prev_rslt_tbl = "dc_output",
  prev_rslt_schema = config("results_schema"),
  check_string = "dc"
)
}
\arguments{
\item{dc_tbl}{\emph{tabular input} || \strong{required}

The primary input table that contains descriptive information about the checks
to be executed by the function. It should include definitions for the CDM elements
that should be compared between the current and previous data model versions.
see \code{?dc_input_omop} or \code{?dc_input_pcornet} for examples of the input structure}

\item{omop_or_pcornet}{\emph{string} || defaults to \code{omop}

A string, either \code{omop} or \code{pcornet}, indicating the CDM format of the data}

\item{prev_db_string}{\emph{string} || defaults to \code{v1}

A string label indicating the previous CDM version

If \code{prev_ct_src} is set to \code{result}, make sure this matches the appropriate database
label in the last set of results}

\item{current_db_string}{\emph{string} || defaults to \code{v2}

A string label indicating the current CDM version}

\item{prev_ct_src}{\emph{string} || defaults to \code{cdm}

A string indicating the source from which  the counts from the previous data model
should be extracted:
\itemize{
\item \code{cdm} will compute the counts based on the previous CDM tables
\item \code{result} will pull existing counts from a previous instance of \code{check_dc} output
}}

\item{prev_db}{\emph{database connection} || defaults to \code{config('db_src')}

A database connection object that will connect the function to the
previous CDM instance or the defined result table}

\item{prev_rslt_tbl}{\emph{string} || defaults to \code{dc_output}

If \code{prev_ct_src} is set to \code{result}, this string should reflect name of
the table where previous results are stored on the database}

\item{prev_rslt_schema}{\emph{string} || defaults to \code{config('results_schema')}

If \code{prev_ct_src} is set to \code{result}, this string should reflect name of
the schema where previous results are stored on the database}

\item{check_string}{\emph{string} || defaults to \code{dc}

An abbreviated identifier that will be used to label all output from this module}
}
\value{
This function will return a list with two dataframes:
\itemize{
\item \code{dc_cts}: A table containing the row and (where applicable) person counts for each CDM
element specified by the user
\item \code{dc_meta}: A table containing the metadata associated with each check that appears in \code{dc_cts}
}
}
\description{
This function will compute row & patient counts in the specified tables for both
the current data model version and a previous data model version in order to
assess changes across data extractions. If you have previously executed this function,
you have the option to point to a previous result set instead of recomputing the
counts from the CDM.
}
\examples{
# First create input file with desired checks to be executed
# You can access examples for both OMOP & PCORnet here:
ndq::dc_input_omop
ndq::dc_input_pcornet

# Use this as your input to the DC function

## If you would like to retrieve counts from a previous CDM instance,
## configure the function like so:
\dontrun{
my_dc_rslt <- check_dc(dc_tbl = ndq::dc_input_omop,
                       omop_or_pcornet = 'omop',
                       prev_db_string = 'my_previous_data',
                       current_db_string = 'my_current_data',
                       prev_ct_src = 'cdm', ## looking in previous CDM instance
                       prev_db = my_prev_db_connection,
                       check_string = 'dc')
}

## If you would like to reference previously executed counts from a prior
## run of check_dc, configure the function like so:
\dontrun{
my_dc_rslt <- check_dc(dc_tbl = ndq::dc_input_omop,
                       omop_or_pcornet = 'omop',
                       prev_db_string = 'my_previous_data',
                       current_db_string = 'my_current_data',
                       prev_ct_src = 'result', ## looking in previous results
                       prev_db = my_prev_db_connection,
                       prev_rslt_tbl = 'my_dc_rslt',
                       prev_rslt_schema = 'my_previous_schema',
                       check_string = 'dc')
}

}
