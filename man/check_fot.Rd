% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/facts_over_time.R
\name{check_fot}
\alias{check_fot}
\title{Facts Over Time}
\usage{
check_fot(
  fot_tbl,
  omop_or_pcornet = "omop",
  compute_method = "loop",
  time_span = list("2009-01-01", today()),
  time_period = "month",
  lookback_interval = 1,
  check_string = "fot",
  visits_only = FALSE,
  distinct_visits = TRUE
)
}
\arguments{
\item{fot_tbl}{\emph{tabular input} || \strong{required}

The primary input table that contains descriptive information about the checks
to be executed by the function. It should include definitions for the clinical fact
types that should be evaluated across the user-specified time span per each time period.
see \code{?fot_input_omop} or \code{?fot_input_pcornet} for examples of the input structure}

\item{omop_or_pcornet}{\emph{string} || defaults to \code{omop}

A string, either \code{omop} or \code{pcornet}, indicating the CDM format of the data}

\item{compute_method}{\emph{string} || defaults to \code{loop}

A string, either \code{loop} or \code{group}, that controls whether the
check is executed by looping through each time period or grouping by a date field to
obtain counts. \code{group} is recommended for high performing database systems.}

\item{time_span}{\emph{list (length 2)} || defaults to \code{list('2009-01-01', today())}

A list that contains the start date and end date of the total time period of interest}

\item{time_period}{\emph{string} || defaults to \code{month}

A string indicating the length of each time period that should be examined, like months or years}

\item{lookback_interval}{\emph{integer} || defaults to \code{1}

An integer indicating the number of time periods (defined in \code{time_period}) to look back in each interval.
For example, a \code{time_period} of \code{month} and a \code{lookback_interval} of \code{3} would produce quarterly counts.}

\item{check_string}{\emph{string} || defaults to \code{fot}

An abbreviated identifier that will be used to label all output from this module}

\item{visits_only}{\emph{boolean} || defaults to FALSE

If set to \code{TRUE}, then this function will only return visit counts and will not return patient
or row counts. By default, visit, row, and patient counts are returned.}

\item{distinct_visits}{\emph{boolean} || defaults to TRUE

If set to \code{FALSE}, then this function will only return patient and row counts and will not return
visit counts. By default, visit, row, and patient counts are returned.}
}
\value{
This function will return a dataframe with one row for each time period within the
specified time span for each check. Additionally:
\itemize{
\item If \code{visits_only = TRUE}, only visit counts will be returned for the check + time period
\item If \code{visits_only = FALSE} and \code{distinct_visits = TRUE}, patient, row, and visit counts will be returned for the check + time period
\item If \code{visits_only = FALSE} and \code{distinct_visits = FALSE}, only patient and row counts will be returned for the check + time period
}
}
\description{
This function will compute the number of rows, patients, and (optionally) visits associated with
the fact of interest within a specified time period. The user will supply the end points of the time span
(i.e. January 2009 - January 2024) and the time period they wish to divide it by (i.e. month, year).
}
\examples{
# First create input file with desired checks to be executed
# You can access examples for both OMOP & PCORnet here:
ndq::fot_input_omop
ndq::fot_input_pcornet

# Use this as your input to the FOT function
## This check can be executed for different time period lengths, like...
### Yearly
\dontrun{
my_fot_rslt <- check_fot(fot_tbl = ndq::fot_input_omop,
                         omop_or_pcornet = 'omop',
                         compute_method = 'loop', # use 'group' for high performant DBMSs
                         time_span = list('2015-01-01', '2025-01-01'),
                         time_period = 'year',
                         lookback_interval = 1,
                         check_string = 'fot')
}

### Monthly
\dontrun{
my_fot_rslt <- check_fot(fot_tbl = ndq::fot_input_omop,
                         omop_or_pcornet = 'omop',
                         compute_method = 'loop', # use 'group' for high performant DBMSs
                         time_span = list('2015-01-01', '2025-01-01'),
                         time_period = 'month',
                         lookback_interval = 1,
                         check_string = 'fot')
}

### Quarterly
\dontrun{
my_fot_rslt <- check_fot(fot_tbl = ndq::fot_input_omop,
                         omop_or_pcornet = 'omop',
                         compute_method = 'loop', # use 'group' for high performant DBMSs
                         time_span = list('2015-01-01', '2025-01-01'),
                         time_period = 'month',
                         lookback_interval = 3,
                         check_string = 'fot')
}

}
